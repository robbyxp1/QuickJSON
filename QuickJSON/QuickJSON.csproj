<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFrameworks>net5.0;net48</TargetFrameworks>
  </PropertyGroup>

  <PropertyGroup>
    <DefaultDocumentationAssemblyPageName>QuickJSON-Class-List</DefaultDocumentationAssemblyPageName>
    <DefaultDocumentationGeneratedPages>Classes,Delegates,Interfaces</DefaultDocumentationGeneratedPages>
    <DefaultDocumentationFileNameMode>FullName</DefaultDocumentationFileNameMode>
    <DefaultDocumentationFolder>bin\mddoc</DefaultDocumentationFolder>
    <DefaultDocumentationRemoveFileExtensionFromLinks>True</DefaultDocumentationRemoveFileExtensionFromLinks>
    <DefaultDocumentationExternLinksFiles>docexternlinks.txt</DefaultDocumentationExternLinksFiles>
    <DefaultDocumentationGeneratedAccessModifiers>Public,Protected</DefaultDocumentationGeneratedAccessModifiers>
    <DefaultDocumentationNestedTypeVisibilities>DeclaringType</DefaultDocumentationNestedTypeVisibilities>
    <PackageId>RJKJSoft.QuickJSON</PackageId>
    <Authors>robbyxp @ gihub.com</Authors>
    <PackageProjectUrl>https://github.com/robbyxp1/QuickJSON</PackageProjectUrl>
    <PackageLicenseExpression>Apache-2.0</PackageLicenseExpression>
    <PackageReadmeFile>readme.md</PackageReadmeFile>
    <RepositoryUrl>https://github.com/robbyxp1/QuickJSON</RepositoryUrl>
    <RepositoryType>Git</RepositoryType>
    <PackageTags>JSON QuickJSON Decoder Encoder</PackageTags>
    <PackageReleaseNotes>1.4
JsonIgnoreAttribute added Ignore and IncludeOnly options so that you can pick members of a class or exclude specific ones
1.3
ToObject was missing a converstion to Object - added.
1.2
Improved string parser with more functionality for use by discrete parser implementations
1.1 
ToObject and FromObject gets better handling of IEnumerations, so HashSet can be handled
1.01
Upload to Nuget had wrong dll - try again
1.00
Fix issue with FromObject when access property indexer []
Made ToString() work so much faster by using StringBuilder!
0.95
Fix issue with DateTimeUTC so it returns a mindate with UTC kind if it fails to convert
DoubleNull and FloatNull added</PackageReleaseNotes>
    <Description>A quick and simple JSON encoder and decoder for .net.
Designed for speed and compactness.
Code can be XCOPYED into your project to avoid DLL dependencies.
</Description>
    <Copyright>(C) robbyxp @ gihub.com  2023</Copyright>
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    <Version>1.4</Version>
    <AssemblyVersion>1.5.0.0</AssemblyVersion>
    <FileVersion>1.5.0.0</FileVersion>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(TargetFramework)|$(Platform)'=='Release|net5.0|AnyCPU'">
    <DocumentationFile>C:\Code\QuickJSON\QuickJSON\bin\release\QuickJSON.xml</DocumentationFile>
  </PropertyGroup>



  <!-- Conditionally obtain references for the .NET Framework target -->
  <ItemGroup Condition=" '$(TargetFramework)' == 'net48' ">
    <Reference Include="Microsoft.CSharp" />
  </ItemGroup>
  <ItemGroup>
    <Compile Remove="QuickJson.cs" />
    <Compile Remove="QuickJSON\QuickJSONTokenSender.cs" />
  </ItemGroup>

  <ItemGroup>
    <None Include="readme.md" Pack="true" PackagePath="" />
  </ItemGroup>
  
  <ItemGroup>
    <PackageReference Include="DefaultDocumentation" Version="0.7.9">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
  </ItemGroup>

  <PropertyGroup Condition="'$(Configuration)'=='Debug'">
    <DefineConstants>DEBUG;TRACE;JSONBIGINT</DefineConstants>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)'=='Release'">
    <DefineConstants>TRACE;JSONBIGINT</DefineConstants>
  </PropertyGroup>

</Project>
